stages:
    - build_node
    - build_docker
    - deploy

build_node:
    stage: build_node
    image: node:18.13-alpine
    cache:
        paths:
            - node_modules/
    script: 
        - npm install
        - npm run build
    artifacts:
        paths:
            - dist/my-portfolio
    
build_docker:
    stage: build_docker
    image: docker:20.10.16
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker build --tag $CI_REGISTRY_IMAGE .
        - docker push $CI_REGISTRY_IMAGE

deploy:
    stage: deploy
    image: docker:20.10.16
    before_script:
        - 'which ssh-agent || ( apk add openssh-client )'
        - eval $(ssh-agent -s)
        - echo "$TARGET_HOST_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\tServerAliveInterval 3600\n\tServerAliveCountMax 2\n\n" >> ~/.ssh/config'
        
    script:
        - ENV_NAME="$CI_PROJECT_NAME"
        - SSH_CONNECTION_STRING=$TARGET_HOST_SSH_USERNAME@$TARGET_HOST_IP
        - scp docker-compose.yml $SSH_CONNECTION_STRING:"$PROJECT_STACK_ROOT_PATH/$(basename $(pwd) )"
        - ssh $SSH_CONNECTION_STRING "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
        - ssh $SSH_CONNECTION_STRING "cd $PROJECT_STACK_ROOT_PATH/$(basename $(pwd) ) && echo -e \"PORTFOLIO_IMAGE=$CI_REGISTRY_IMAGE\nPORTFOLIO_DNS=$PORTFOLIO_DNS\" > .env"
        - ssh $SSH_CONNECTION_STRING "cd $PROJECT_STACK_ROOT_PATH/$(basename $(pwd) ) && docker-compose pull && docker-compose up -d"
